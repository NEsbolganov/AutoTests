plugins {
    id 'java-library'
    id("io.qameta.allure") version "2.11.2"
}

allure {
    report{
        version.set("2.19.0")
    }
    adapter{
        aspectjWeaver.set(true)
        frameworks{
            junit5{
                adapterVersion.set("2.19.0")
            }
        }
    }
}

repositories {
    mavenCentral()
}

def allureVersion = "2.24.0",
    selenideVersion = "7.0.6",
    junitVersion = "5.10.1",
    ownerVersion = "1.0.12"


dependencies {
    testImplementation(
            'org.aspectj:aspectjweaver:1.9.20.1',
            "com.codeborne:selenide:$selenideVersion",
            "org.hamcrest:hamcrest-all:1.3",
            "io.qameta.allure:allure-selenide:$allureVersion",
            'io.rest-assured:rest-assured:5.3.2',
            "io.qameta.allure:allure-java-commons:$allureVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "org.slf4j:slf4j-simple:2.0.7",
            'com.github.javafaker:javafaker:1.0.2',
            'com.codeborne:selenide-proxy:6.8.1',
            'com.codeborne:pdf-test:1.5.0',
            'com.codeborne:xls-test:1.4.3',
            'com.opencsv:opencsv:5.7.1',
            'com.google.code.gson:gson:2.10.1',
            'io.qameta.allure:allure-selenide:2.25.0'
    )
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    systemProperties(System.getProperties())
    System.setProperty("junit.jupiter.extensions.autodetection.enabled", "true")
}
